#include <stdio.h>
#include <stdlib.h>
int main (){
    int *p, i, n1, n2;
    printf ("Digite o tamanho: \n");
    scanf ("%d", &n1);
    p  = (int*) malloc(n1 * sizeof(int)); 
    /*p variável do tipo ponteiro que aponta pra um inteiro declarada na linha 6
    (int *) typecast que converte o retorno da função malloc que sempre retorna um ponteiro do tipo void para um ponteiro do tipo int pois p é int
    Função malloc() vai reservar um espaço na memória e retornar um ponteiro do tipo void para esse espaço, o tamanho do espaço reservado estará dentro dos parenteses
    n1 (numero scanf) multiplicado por 4 bytes de um inteiro definidos no sizeof
    sizeof(int) retorna o valor de 4 bytes */
    
    printf ("Endereço de alocação previo:\n");
    for(i=0;i<n1;i++){
        printf("%pc\n", p+i);
        printf("Digite o novo tamanho: ");
        scanf ("%d", &n2);
        
         p = realloc(p, n2 * sizeof(int)); 
         //realoca a memória do malloc anterior sem precisar usar um free e um novo malloc
        //utilizando dois parâmetros onde o primeiro parâmetro será o endereço do realocamento
        //e o segundo parâmetro será a nova quantidade de bytes desse endereço
    
        printf ("Endereço da nova locação de memória: \n");
        }
    
    for(i=0;i<n2;++i){
        printf("%pc\n", p+i);
    }
    
    free(p);    
    return 0; 
}

